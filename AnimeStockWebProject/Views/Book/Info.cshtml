@model BookInfoViewModel
@inject IConfiguration Configuration

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<link rel="stylesheet" href="~/AnimeStockWebProject.styles.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/Reset.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/BookStyles/Info.css" asp-append-version="true" />
<script src="~/lib/pdfjs-4.0.379-dist/build/pdf.mjs"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script>
<link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<div id="pdf-overlay">
    <div id="pdf-container">
        <partial name="_BookPartial" model="Model.PdfContent" />
    </div>
</div>


<section class="book-card">
    <div class="book-path">
        <ul role="list">
            <li class="list-item">
                <a class="books-path" asp-area="" asp-controller="Book" asp-action="Books">Books</a>>
            </li>
            <li class="list-item">
                <a class="printType-path" asp-area="" asp-controller="Book" asp-action="Books" asp-route-printType="@Model.PrintType">@Model.PrintType</a>>
            </li>
            <li class="list-item">
                @if (Model.BookType == "Light Novel")
                {
                    <a class="bookType-path" asp-area="" asp-controller="Book" asp-action="Books" asp-route-bookTypeId="1">@Model.BookType</a>
                }
                else
                {
                    <a class="bookType-path" asp-area="" asp-controller="Book" asp-action="Books" asp-route-bookTypeId="2">@Model.BookType</a>
                }

            </li>
        </ul>
    </div>

    <div class="main-container">
        <div class="img-button-change">
            <button class="move-button prev-button">Previous</button>
            @{
                int previewImgCount = 1;
                @foreach (var img in Model.Pictures)
                {
                    if (previewImgCount < 3)
                    {
                        <img id="active-img" class="preview-active-img" src="@img.Path" />
                    }
                    else
                    {
                        <img id="active-img" src="@img.Path" />
                    }
                }
            }
           
            <button class="move-button next-button">Next</button>
        </div>
        <div class="img-container">
            
            @{
                int count = 1;
                @foreach (PictureViewModel picture in Model.Pictures)
                {
                    if (count == 1)
                    {
                        <img id="active-img" class="active-img" src="@picture.Path" />
                    }
                    else
                    {
                        <img id="active-img" src="@picture.Path" />
                    }
                    count++;
                }
            }
            
            <input type="hidden" value="@Model.FilePath" />
            <input type="hidden" value="@Model.Id" />
            <button id="preview-button">Preview</button>
        </div>


        <div class="book-information">
            <div class="container-1">
                <h1 class="book-title">@Model.Title</h1>

                <p class="book-description">@Model.Description</p>

                <div class="more-items">
                    <div class="right-div">
                        <a id="book-details" class="item" href=".book-details-recommendations">
                            Book details..
                        </a>
                    </div>

                    <div class="left-div">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <input type="hidden" value="@Model.Id" />
                            @if (Model.IsFavorite)
                            {
                                <button id="favorite-container" class="item">Unfavorite</button>
                            }
                            else
                            {
                                <button id="favorite-container" class="item">Favorite</button>
                            }
                        }
                        <form class="order-form" method="post">
                            <div class="order-container">
                                <input type="number" id="quantity" name="quantity" min="1" asp-for="@Model.UserQuantity">
                                <input type="hidden" asp-for="@Model.Title" value="@Model.Title" />
                                <input type="hidden" asp-for="@Model.Price" value="@Model.Price" />
                                <input type="hidden" asp-for="@Model.Id" value="@Model.Id" />
                                <input type="hidden" asp-for="@Model.UserQuantity" value="@Model.UserQuantity" />
                                <input type="hidden" asp-for="@Model.ReleaseDate" value="@Model.ReleaseDate" />
                                <span asp-validation-for="@Model.UserQuantity" class="text-danger"></span>
                                @if (Model.ReleaseDate > DateTime.Now)
                                {
                                    <button id="purchase-button" class="item" type="submit">Pre-Order!</button>
                                }
                                else if (Model.BookQuantity == 0 && Model.PrintType == PrintTypeEnum.Phisycal.ToString())
                                {
                                    <button id="purchase-button" class="item" type="submit" onclick="return false;">Unavailable</button>
                                }
                                else
                                {
                                    <button id="purchase-button" class="item" type="submit">Order Now!</button>
                                }
                                
                            </div>
                        </form>
                        <h2 id="book-price" class="item">@Model.Price$</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="book-details-recommendations">
    <div class="book-details">
        <h2>Book Details</h2>

        <ul role="list">
            <li><span>Author: </span>@Model.Author</li>
            <li><span>Illustrator: </span>@Model.Illustrator</li>
            <li><span>Publisher: </span>@Model.Publisher</li>
            <li>
                <ul role="list" class="tags">
                    <li><span>Tags: </span></li>
                    @foreach (var tag in Model.BookTags)
                    {
                        <li>@tag.Name</li>
                    }
                </ul>
            </li>
            <li><span>Book Type: </span>@Model.BookType</li>
            <li><span>Print Type: </span>@Model.PrintType</li>
            <li><span>Release Date: </span>@Model.ReleaseDate.Date.ToString("MMMM dd, yyyy")</li>
            <li><span>Pages: </span>@Model.Pages</li>
        </ul>
    </div>

    <div class="recomendations">
        <h2 class="book-suggestion">Book suggestions</h2>

        <div class="sugestion-item-container">
            <button class="left-button"><i class="fa-solid fa-arrow-left"></i></button>
            <section id="other-books">
                <p class="no-suggestions">No other books of this series</p>
            </section>
            <button class="right-button"><i class="fa-solid fa-arrow-right"></i></button>
        </div>
    </div>
</section>

<section class="comments-container">
    <div class="title-sorting">
        <h2 class="comment-title">
            Comments
        </h2>
    </div>


    <div class="my-comment-container">
        <div class="comment-editable" contenteditable="true" placeholder="Write your comment..."></div>
        <div class="comment-buttons">
            <button class="decline-button">Decline</button>
            <button class="post-button">Post</button>
        </div>
    </div>
    <div class="comment-inner-container">
        

        @foreach (var comment in Model.Comments)
        {

            
            <article class="comment-card">
                <div class="user-info">
                    <div class="profile-img-container">
                        @if (string.IsNullOrWhiteSpace(comment.UserPicturePath))
                        {
                            <i class="fa-regular fa-user" id="user-icon"></i>
                        }
                        else
                        {
                            <img src="~/@comment.UserPicturePath" alt="Profile picture" />
                        }
                    </div>

                    <div class="profile-info">
                        <p class="username">@comment.UserName</p>
                        <p class="post-date">@comment.CreatedOn.Date.ToString("MM/dd/yyyy")</p>
                    </div>
                </div>
                <p class="comment">@comment.Description</p>
                @if (User.Identity.IsAuthenticated && Guid.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out var userId) && userId == comment.UserId)
                {
                    <input type="hidden" value="@comment.Id" />
                    <div class="button-container">
                        <button type="submit" asp-action="Edit" asp-controller="Comment" class="edit">Edit</button>
                        <button class="delete">Delete</button>
                    </div>
                }
            </article>
        }

    </div>

    <div class="pagination-container">
        @if (Model.CommentsPager.TotalPages > 0)
        {
            <ul class="page-list">
                @if (Model.CommentsPager.CurrentPage > Model.CommentsPager.StartPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Info", "Book", new{
                            page = Model.CommentsPager.CurrentPage - 1,
                            id = Model.Id
                        })">Previous</a>
                    </li>
                }
                @for (int page = Model.CommentsPager.StartPage; page <= Model.CommentsPager.EndPage; page++)
                {
                    <li class="page-item">
                        <a class="page-link @(page == Model.CommentsPager.CurrentPage ? "active" : "")" href="@Url.Action("Info", "Book", new
                            {
                                page = page,
                                id = Model.Id
                            })">@(page)</a>
                    </li>
                }
                @if (Model.CommentsPager.CurrentPage < Model.CommentsPager.EndPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Info", "Book", new{
                            page = Model.CommentsPager.CurrentPage + 1,
                            id = Model.Id
                        })">Next</a>
                    </li>
                }
            </ul>
        }
    </div>
</section>

<script>
    const csrfToken = '@GetAntiXsrfRequestToken()';
</script>
<script src="~/js/Books/Info.js"></script>
<script src="~/js/Comment/PostComment.js"></script>
<script src="~/js/Comment/EditComment.js"></script>
<script src="~/js/Comment/DeleteComment.js"></script>