@model BookDataModel
@using AnimeStockWebProject.Infrastructure.Data.Models

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}


<link rel="stylesheet" href="~/css/Admin/Book/IndexStyles.css" asp-append-version="true" />

<div class="container">
    <h1 class="title">Books</h1>
    <div class="row">
        @foreach (var book in Model.BookViewModels)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <img src="@book.PictureUrl" class="card-img-top" alt="Book Image">
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <div class="buttons">
                            <a href="@Url.Action("Edit", "Book", new { area = "Admin", bookId = book.Id, bookTypeId = book.BookTypeId })" class="btn btn-primary">Edit Book</a>
                            @if (!book.IsDeleted)
                            {
                                <div>
                                    <input type="hidden" name="bookId" value="@book.Id" />
                                    <button class="btn btn-danger" onclick="deleteBook(@book.Id, event)">Delete Book</button>
                                </div>
                            }
                            else
                            {
                                <div>
                                    <input type="hidden" name="bookId" value="@book.Id" />
                                    <button class="btn btn-success" onclick="recoverBook(@book.Id, event)">Recover Book</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="pagination mt-4">
        @if (Model.Pager.TotalPages > 0)
        {
            <ul class="pagination justify-content-center">
                @if (Model.Pager.CurrentPage > Model.Pager.StartPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Book", new { area = "Admin", page = Model.Pager.CurrentPage - 1 })">Previous</a>
                    </li>
                }

                @for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    <li class="page-item @(page == Model.Pager.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Book", new { area = "Admin", page = page })">@(page)</a>
                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.EndPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", "Book", new { area = "Admin", page = Model.Pager.CurrentPage + 1 })">Next</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>

<script>
    const csrfToken = '@GetAntiXsrfRequestToken()';
</script>

<script src="~/js/Admin/Books/Index.js"></script>

<script src="~/js/Modal.js"></script>