@using AnimeStockWebProject.Infrastructure.Data.Enums
@model BookEditViewModel

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<link rel="stylesheet" href="~/css/Admin/Book/EditStyles.css" asp-append-version="true" />

<div class="container">
    <h1 class="title">Edit Book</h1>
    <form method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="Title">Book Title</label>
            <input id="Title" class="form-control" asp-for="@Model.Title" />
            <span asp-validation-for="@Model.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Author">Book Author</label>
            <input id="Author" class="form-control" asp-for="@Model.Author" />
            <span asp-validation-for="@Model.Author" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Illustrator">Book Illustrator</label>
            <input id="Illustrator" class="form-control" asp-for="@Model.Illustrator" />
            <span asp-validation-for="@Model.Illustrator" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Publisher">Book Publisher</label>
            <input id="Publisher" class="form-control" asp-for="@Model.Publisher" />
            <span asp-validation-for="@Model.Publisher" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="ReleaseDate">Book Release Date</label>
            <input id="ReleaseDate" class="form-control" asp-for="@Model.ReleaseDate" type="date" />
            <span asp-validation-for="@Model.ReleaseDate" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Description">Book Description</label>
            <textarea id="Description" class="form-control" asp-for="@Model.Description"></textarea>
            <span asp-validation-for="@Model.Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Price">Book Price</label>
            <input id="Price" class="form-control" asp-for="@Model.Price" />
            <span asp-validation-for="@Model.Price" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="BookTypeId">Book Type</label>
            <select id="BookTypeId" class="form-control" asp-for="@Model.BookTypeId">
                @foreach (var bookType in Model.BookTypes)
                {
                    <option value="@bookType.Id">@bookType.Name</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="Pages">Book Pages</label>
            <input id="Pages" class="form-control" asp-for="@Model.Pages" />
            <span asp-validation-for="@Model.Pages" class="text-danger"></span>
        </div>

        <div class="form-group" id="quantity-form">
            <label for="Quantity">Book Quantity</label>
            <input id="Quantity" class="form-control" asp-for="@Model.Quantity" />
            <span asp-validation-for="@Model.Quantity" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Print Type</label>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="PrintType" id="DigitalPrintType" value="2" @(Model.PrintType == PrintTypeEnum.Digital ? "checked" : "")>
                <label class="form-check-label" for="DigitalPrintType">Digital</label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="PrintType" id="PhysicalPrintType" value="1" @(Model.PrintType == PrintTypeEnum.Phisycal ? "checked" : "")>
                <label class="form-check-label" for="PhysicalPrintType">Physical</label>
            </div>
        </div>

        <div class="form-group">
            <h2 class="book-tags">Add book tags</h2>
            @foreach (var tag in Model.BookTags)
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="SelectedBookTagIds" value="@tag.Id"
                    @(Model.SelectedBookTagIds.Contains(tag.Id) ? "checked" : "")>
                    <label class="form-check-label">@tag.Name</label>
                </div>

            }
        </div>
        
        <div class="form-group">
            <div class="images-items">
                @foreach (var coverImg in Model.CoverImg)
                {
                    <div class="cover-img-container">
                        <img class="cover" src="@coverImg.Path" />
                    </div>
                    @if (!coverImg.IsDeleted)
                    {

                        <button class="delete" onclick="deletePicture(@coverImg.Id, event)">Delete</button>
                    }
                    else
                    {
                        <button class="recover" onclick="recoverPicture(@coverImg.Id, event)">Recover</button>
                    }
                }
                
            </div>
            
        </div>

        <div class="form-group">
            <label class="choose-file" for="NewCoverImg">Choose cover picture to upload</label>
            <input type="file" id="NewCoverImg" name="newCoverImg" accept=".jpg, .jpeg, .png, .webp" class="form-control-file">
            <span id="newCoverImgIndicator"></span>
        </div>

        <div class="form-group">
            @foreach (var img in Model.Pictures)
            {
                <div class="images-items">
                    <div class="img-container">
                        <img src="@img.Path" />
                    </div>
                    @if (!img.IsDeleted)
                    {
                        <button class="delete" onclick="deletePicture(@img.Id, event)">Delete</button>
                    }
                    else
                    {
                        <button class="recover" onclick="recoverPicture(@img.Id, event)">Recover</button>

                    }
                </div>
            }
        </div>

        <div class="form-group">
            <label class="choose-file" for="NewPictures">Choose pictures to upload</label>
            <input type="file" id="NewPictures" name="newPictures" accept=".jpg, .jpeg, .png, .webp" multiple class="form-control-file">
            <span id="newPicturesIndicator"></span>
        </div>

        <div class="form-group">
            <label class="choose-file" for="BookFile">Choose Book File</label>
            <input type="file" id="BookFile" name="bookFile" accept=".pdf, .cbz" class="form-control-file">
            <span id="bookFileIndicator"></span>
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>

<script>
    const csrfToken = '@GetAntiXsrfRequestToken()';

    document.querySelectorAll("input[type=file]").forEach(input => input.style.opacity = 0);
</script>

<script src="~/js/Admin/Books/Book.js"></script>
